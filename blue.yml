- name: Deploy
  hosts: [localhost]
  gather_facts: false
  vars:
    ansible_python_interpreter: /usr/bin/python3
    application: djangoblue
    region: us-west-2
  
  tasks:
    - name: Create a security group
      ec2_group:
        name: Blue Security Group
        description: Security Group for djangoblue
        region: "{{ region }}"
        rules:
          - proto: tcp
            ports:
              - 22
              - 80
              - 8000-8080
            cidr_ip: 0.0.0.0/0
      register: security_group

    - name: Create ELB
      ec2_elb_lb:
        name: "{{ application }}-load-balancer"
        state: present
        region: "{{ region }}"
        zones:
          - us-west-2a
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 8000
      register: elb 

    - name: Create EC2 instance 
      ec2:
        instance_type: t2.micro
        image: ami-06d51e91cea0dac8d
        region: "{{ region }}"
        group_id: "{{ security_group.group_id }}"
        wait: yes
        instance_tags:
          application: "{{ application }}"
      register: ec2_instance

    - name: Wait for EC2 online
      wait_for:
        host: "{{ item.public_ip }}"
        port: 80
        timeout: 180
      with_items: "{{ ec2_instance.tagged_instances }}"
      ignore_errors: True

    - name: Install Docker on EC2
      apt:
        name: docker
        
    - name: Pull & Run Docker
      docker_container:
        name: django_container
        image: zhan430/traveblog:lastest
        pull: yes
        state: started

    - name: Add EC2 instance to ELB
      ec2_elb:
        state: present
        ec2_elbs: elb.name
        region: "{{ region }}"
        instance_id: "{{ item.id }}"
      with_items: "{{ ec2_instance.tagged_instances }}"

    - name: change route53
      route53:
        state: present
        zone: lazxy.com
        record: www.lazxy.com
        failover: PRIMARY
        type: CNAME
        ttl: 30
        identifier: blue
        private_zone: yes
        overwrite: yes
        value: "{{ application }}-load-balancer"
        wait: yes
        health_check: "f727fa34-2bbd-4288-b59f-7ca9f74c5f34"


