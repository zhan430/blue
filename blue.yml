- name: Create EC2
  hosts: [localhost]
  connection: local
  gather_facts: false
  vars:
    ansible_python_interpreter: /usr/bin/python3
    application: djangoblue
    region: us-west-2
  
  tasks:
    - name: Collect EC2 info
      ec2_instance_facts:
        region: "{{ region }}"
        instance_ids: 
          - i-0c2a60beb918e140a
      register: ec2_instance
    
    - name: Add EC2 instance to host
      add_host:
        name: "{{ item.public_ip_address }}"
        groups: server
      with_items: "{{ ec2_instance.instances }}"

- name: Deploy EC2
  hosts: server
  remote_user: ubuntu
  become: yes 
  gather_facts: false
  vars:
    ansible_python_interpreter: /usr/bin/python3

  tasks:
   - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Pull & Run Docker
      docker_container:
        name: django_container
        image: zhan430/traveblog:lastest
        pull: yes
        state: started

- name: Setup Route53
  hosts: [localhost]
  gather_facts: false
  vars:
    application: djangoblue
    region: us-west-2
  
  tasks:
    - name: Add EC2 instance to ELB
      ec2_elb:
        state: present
        ec2_elbs: elb.name
        region: "{{ region }}"
        instance_id: "{{ item.instance_id }}"
      with_items: "{{ ec2_instance.instances }}"

    - name: change route53
      route53:
        state: present
        zone: lazxy.com
        record: www.lazxy.com
        failover: PRIMARY
        type: CNAME
        ttl: 30
        identifier: blue
        private_zone: yes
        overwrite: yes
        value: "{{ application }}-load-balancer"
        wait: yes
        health_check: "f727fa34-2bbd-4288-b59f-7ca9f74c5f34"


